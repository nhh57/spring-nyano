version: '3.2'

networks:
  pre-event-member-mysql:
    driver: bridge

services:
  mysql:
    image: mysql:8.0.33
    container_name: pre-event-member-mysql
    restart: always
    volumes:
      - ./data/db_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d/
    command: [
      '--character-set-server=utf8mb4',
      '--collation-server=utf8mb4_unicode_ci',
      '--skip-character-set-client-handshake'  # Buộc tất cả kết nối sử dụng utf8mb4
    ]
    environment:
      MYSQL_ROOT_PASSWORD: root1234
      MYSQL_DATABASE: ticket
      MYSQL_PASSWORD: root1234
    ports:
      - "3316:3306"
    networks:
      - pre-event-member-mysql

  #Redis
  redis:
    container_name: pre-event-redis
    image: redis:6.2
    platform: linux/amd64
    ports:
      - "6319:6379"
    networks:
      - pre-event-member-mysql

  prometheus:
    image: prom/prometheus:latest
    container_name: pre-event-prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./data/prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    extra_hosts:
      - host.docker.internal:host-gateway
    ports:
      - "9090:9090"
    networks:
      - pre-event-member-mysql

  grafana:
    image: grafana/grafana
    container_name: pre-event-grafana
    hostname: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SING_UP=false
      - GF_SERVER_DOMAIN=10.56.66.52
      #enable logger
      - GF_LOG_MODE=console file
      - GF_LOG_FILTERS=alerting.notifier.slack:debug alermanager:debug ngalert:debug

    volumes:
      - ./grafana-storage:/var/lib/grafana
    ports:
      - "3000:3000"
    networks:
      - pre-event-member-mysql

  node-exporter:
    image: prom/node-exporter:latest
    container_name: pre-event-node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - --path.procfs=/host/proc
      - --path.rootfs=/rootfs
      - --path.sysfs=/host/sys
      - --collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)
    ports:
      - "9100:9100"
    networks:
      - pre-event-member-mysql

  mysqld-exporter:
    image: prom/mysqld-exporter
    container_name: pre-event-mysqld-exporter
    ports:
      - "9104:9104"
    command:
      - '--collect.engine_innodb_status'
      - '--collect.info_schema.processlist'
      - '--collect.info_schema.tables'
      - '--collect.info_schema.query_response_time'
      - '--collect.perf_schema.file_events'
      - '--collect.perf_schema.eventsstatements'
      - '--collect.perf_schema.indexiowaits'
      - '--collect.global_status'
      #      - '--ignore-tables'
      - '--config.my-cnf=/etc/mysql/.my.cnf'
    volumes:
      - ./mysqld-exporter/.my.cnf:/etc/mysql/.my.cnf
    environment:
      - DATA_SOURCE_NAME=root:root1234@tcp(mysql:3316)/
    depends_on:
      - mysql
    networks:
      - pre-event-member-mysql

  redis-exporter:
    image: oliver006/redis_exporter
    command: -redis.addr redis://redis:6379
    ports:
      - 9121:9121
    networks:
      - pre-event-member-mysql

  elasticsearch:
    image: elasticsearch:7.17.25
    container_name: pre-event-elasticsearch
    volumes:
      - ./elk/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      discovery.type: single-node
    networks:
      - pre-event-member-mysql

  logstash:
    image: logstash:7.17.25
    container_name: pre-event-logstash
    volumes:
      - ./elk/logstash.yml:/usr/share/logstash/config/logstash.yml
      - ./elk/pipeline:/usr/share/logstash/pipeline
    ports:
      - "5044:5044"
      - "5033:5000/tcp"
      - "5022:5000/udp"
      - "9600:9600"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - pre-event-member-mysql

  kibana:
    image: kibana:7.17.25
    container_name: pre-event-kibana
    volumes:
      - ./elk/kibana.yml:/usr/share/kibana/config/kibana.yml
    ports:
      - "5601:5601"
    networks:
      - pre-event-member-mysql
    depends_on:
      - elasticsearch


  zookeeper:
    image: quay.io/debezium/zookeeper:2.7
    container_name: demo_zookeeper
    ports:
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - pre-event-member-mysql

  kafka:
    image: quay.io/debezium/kafka:2.7
    container_name: demo_kafka
    ports:
      - "9092:9092"
    links:
      - zookeeper
    environment:
      - ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://10.56.66.52:9092
      - KAFKA_BROKER_ID=1
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    networks:
      - pre-event-member-mysql

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: demo_kafka-ui
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: demo_kafka:9092
    ports:
      - "9089:8080"
    links:
      - kafka
    networks:
      - pre-event-member-mysql

  connect:
    image: quay.io/debezium/connect:2.7
    container_name: demo_connect
    ports:
      - "8083:8083"
    links:
      - kafka
      - mysql
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=my_connect_configs
      - OFFSET_STORAGE_TOPIC=my_connect_offsets
      - STATUS_STORAGE_TOPIC=my_connect_statuses
    networks:
      - pre-event-member-mysql

  vetautet-service:
    image: spring-nyano:v1.0.0
    container_name: spring-nyano
    ports:
      - "1122:1122"
    environment:
      APP_NAME: vetautet-1
    networks:
      - pre-event-member-mysql
    depends_on:
      - mysql
      - redis
      - logstash
      - kafka

  vetautet-service2:
    image: spring-nyano:v1.0.0
    container_name: spring-nyano2
    ports:
      - "1123:1122"
    environment:
      APP_NAME: vetautet-2
    networks:
      - pre-event-member-mysql
    depends_on:
      - mysql
      - redis
      - logstash
      - kafka